GRAMATICA
<ciclo1> -> <proposicion>
<ciclo1> -> <proposicion> ;
<oracion1> -> { <ciclo1> }
<oracion2> -> id = <expresion>
<articulo1> -> id
<articulo1> -> num
<oracion3> -> print <articulo1>
<oracion4> -> input id

<oracion5> -> exec id
<oracion6> -> if <condicion> : <proposicion>
<oracion7> -> while <condicion> : <proposicion>
<articulo2> -> ->
<articulo2> -> <-
<oracion8> -> for id = <expresion> <articulo2> <expresion> : <proposicion>
<multiplo1> -> <oracion1> <oracion2> <oracion3> <oracion4> <oracion5> <oracion6> <oracion7> <oracion8>
<proposicion> -> <multiplo1>

<Bloque> -> <Expresion> <multiplo> <Expresion>
<Multiplo1> -> ==
<Multiplo1> -> <>
<Multiplo1> -> <
<Multiplo1> -> >
<Multiplo1> -> <=
<Multiplo1> -> >=

<Ciclo1> -> <Factor>
<Ciclo1> -> <Factor><Articulo1><Ciclo1>
<Termino> -> <Ciclo1>

<multiplo1> -> <oracion1>
<multiplo1> -> id
<multiplo1> -> num
<oracion1> -> ( <Expresion> )
<Factor> -> <multiplo1>

<Ciclo1> -> <Termino>
<Ciclo1> -> <Termino> <Articulo1> <Ciclo1>
<Expresion> -> <Ciclo1>

<ciclo1> -> id
<ciclo1> -> id = id
<ciclo1> -> id = id g <ciclo1>
<oracion1> -> const
<oracion1> -> <ciclo1>
<oracion1> -> ;
<ciclo2> -> id
<ciclo2> -> id , <ciclo2>
<oracion2> -> var <ciclo2> ;
<oracion3> -> proced
<oracion3> -> id
<oracion3> -> ;
<oracion3> -> <Bloque>
<oracion3> -> ;
<Bloque> -> <oracion1> <oracion2> <oracion3> <Proposicion>

<Programa> -> <Bloque>.

